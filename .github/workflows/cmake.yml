name: CMake + Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      # 1. Check out the code
      - uses: actions/checkout@v3

      # Set up the Visual Studio environment so tools like `dumpbin` are
      # available. This is only required on Windows runners.
      - name: MSVC Environment
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1      # 2. Install & set up Python (match your CMake find_package version)
      - name: Set up Python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      # 3. Install pytest (and any other Python deps)
      - name: Install Python test dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install pytest      # 4. Configure your CMake project
      - name: Configure
        shell: pwsh
        run: |
          python -c "import sys; print('Python executable:', sys.executable); print('Python version:', sys.version)"
          $pythonExe = python -c "import sys; print(sys.executable)"
          Write-Host "Using Python executable: $pythonExe"
          # Clean any previous build to ensure fresh configuration
          if (Test-Path build_win) { Remove-Item -Recurse -Force build_win }
          cmake -S . -B build_win -DCMAKE_BUILD_TYPE=Release -DPython3_EXECUTABLE="$pythonExe"

      # 5. Build
      - name: Build
        run: cmake --build build_win --config Release      
      
      # 6. Run CTest (including your python_add_test)
      - name: Test
        working-directory: build_win
        run: ctest --output-on-failure -C Release
